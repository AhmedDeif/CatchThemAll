package src;

import java.util.Collections;
import java.util.Arrays;
import java.util.concurrent.ThreadLocalRandom;

public class Maze {

	/*
	 * The end point will always be set to be the bottom right corner of the maze.
	 * The coordinates of this point will always be maze[n-1][m-1] where n and m
	 * define the size of the maze in the x and y directions respectively.
	 */
	
	private int x;
	private int y;
	private Cell[][] maze;
	private static int sizeLimit = 5;
	private int startPointX;
	private int startPointY;
	private int numberOfPokemons;
	private int numCells;
	
	public Maze() {
		int x = ThreadLocalRandom.current().nextInt(0, sizeLimit + 1);
		int y = ThreadLocalRandom.current().nextInt(0, sizeLimit + 1);
		maze = new Cell[x][y];
		this.x = x;
		this.y = y;
		this.startPointX = ThreadLocalRandom.current().nextInt(0, x + 1);
		this.startPointY = ThreadLocalRandom.current().nextInt(0, y + 1);
		this.numCells = x * y;
		this.numberOfPokemons = ThreadLocalRandom.current().nextInt(0, (numCells - 2) + 1);
	}
	
	public void putPokemons() {
		//	Create a random number of pokemons and put in maze cells.
		for(int i=0; i< x; i++) {
			
			for(int j=0; j<y; j++) {
				
				
			}
		}
		
	}
	
	public void GenerateStartPoint() {
		
	}
	
	
	
}
